user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=global:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=200r/m;

    # Upstream definitions for load balancing
    upstream api_gateway {
        least_conn;
        server api-gateway:80 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }

    upstream user_service {
        least_conn;
        server user-service:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream ticketing_service {
        least_conn;
        server ticketing-service:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream payment_service {
        least_conn;
        server payment-service:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream inbox_service {
        least_conn;
        server inbox-service:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name health.localhost;

        location /health {
            access_log off;
            return 200 '{"service":"nginx-load-balancer","status":"healthy","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }

    # Main load balancer configuration
    include /etc/nginx/conf.d/*.conf;
}
