server {
    listen 80 default_server;
    server_name localhost _;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Load-Balancer "nginx-transbandung" always;

    # Health check for load balancer
    location /health {
        access_log off;
        return 200 '{"service":"nginx-load-balancer","status":"healthy","upstreams":{"api-gateway":"up","user-service":"up","ticketing-service":"up","payment-service":"up","inbox-service":"up"},"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Service status endpoint
    location /status {
        access_log off;
        return 200 '{"services":{"api-gateway":"http://api-gateway","user-service":"http://user-service:8001","ticketing-service":"http://ticketing-service:8002","payment-service":"http://payment-service:8003","inbox-service":"http://inbox-service:8004"}}';
        add_header Content-Type application/json;
    }

    # Direct service access routes (for debugging)
    location ~* ^/services/user-service/(.*)$ {
        proxy_pass http://user_service/$1$is_args$args;
        include /etc/nginx/proxy_params.conf;
    }

    location ~* ^/services/ticketing-service/(.*)$ {
        proxy_pass http://ticketing_service/$1$is_args$args;
        include /etc/nginx/proxy_params.conf;
    }

    location ~* ^/services/payment-service/(.*)$ {
        proxy_pass http://payment_service/$1$is_args$args;
        include /etc/nginx/proxy_params.conf;
    }

    location ~* ^/services/inbox-service/(.*)$ {
        proxy_pass http://inbox_service/$1$is_args$args;
        include /etc/nginx/proxy_params.conf;
    }

    # API routes with rate limiting
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        proxy_pass http://api_gateway;
        include /etc/nginx/proxy_params.conf;
    }

    # GraphQL endpoint
    location /graphql {
        limit_req zone=api burst=30 nodelay;
        proxy_pass http://api_gateway;
        include /etc/nginx/proxy_params.conf;
    }

    # Main application (route to API Gateway)
    location / {
        limit_req zone=global burst=20 nodelay;
        proxy_pass http://api_gateway;
        include /etc/nginx/proxy_params.conf;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass http://api_gateway;
        include /etc/nginx/proxy_params.conf;
    }

    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Logging
    access_log /var/log/nginx/load-balancer-access.log main;
    error_log /var/log/nginx/load-balancer-error.log;
}
